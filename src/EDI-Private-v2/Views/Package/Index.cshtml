@using EDIPrivate.ViewModels

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model PackageViewModel
<div id="ajaxDetailWait"></div>
<div id="tabs">
    <ul>
        @if (Model.Collections.Any(c => c.Study.Series != default(SeriesStubViewModel) && c.Study.Series.Id > 0 && !string.IsNullOrWhiteSpace(c.Study.Series.Name)))
        {
            <li id="tbSeries">
                <a href="#tabSeries">SERIES</a>
            </li>
        }
        @if (Model.Collections.Any(c => c.Study != default(StudyStubViewModel) && c.Study.Id > 0 && !string.IsNullOrWhiteSpace(c.Study.Name)))
        {
            <li id="tbStudy">
                <a href="#tabStudy">STUDY</a>
            </li>
        }
        @if (Model.Collections.Any())
        {
            <li id="tbCollection">
                <a href="#tabCollection">COLLECTION</a>
            </li>
        }
        <li id="tbPackage">
            <a href="#tabPackage">PACKAGE</a>
        </li>
    </ul>

    <div id="tabPackage">
        <div id="divPackage">
            <table style="width: 100%; margin-bottom: 10px" id="tblPackages" class="detailTables">
                <tr>
                    <td style="font-weight:bold; font-size: medium; padding-bottom: 8px;" colspan="2">
                        @Model.Title
                        <div style="float:right">
                            <input role="search" title="Search package" style="width:130px;padding:0;font-size:small" type="text" name="txtPackageSearchTerm" id="txtPackageSearchTerm" />
                            <button role="button" class="btn" title="Search Package" id="packageSearchBtn">
                                Search
                            </button>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td colspan="2" style="border-top: 1px solid #c5dbec;"></td>
                </tr>
                @if (!string.IsNullOrWhiteSpace(Model.ICRAS))
                {
                    <tr>
                        <td class="bold" style="width: 160px;">@Html.DisplayNameFor(_ => Model.ICRAS):</td>
                        <td>@Model.ICRAS</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.EDICS))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.EDICS):</td>
                        <td>@Model.EDICS</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.ICRReferenceNumber))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.ICRReferenceNumber):</td>
                        <td>@Model.ICRReferenceNumber</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.OMBControlNumber))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.OMBControlNumber):</td>
                        <td>@Model.OMBControlNumber</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.CFDA))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.CFDA):</td>
                        <td>@Model.CFDA</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Keywords))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.Keywords):</td>
                        <td>@Model.Keywords</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.Abstract))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.Abstract):</td>
                        <td>@Model.Abstract</td>
                    </tr>
                }
                @if (Model.IssueDate.HasValue)
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.IssueDate):</td>
                        <td>@Model.IssueDate.Value.ToString("d")</td>
                    </tr>
                }
                @if (Model.ExpirationDate.HasValue)
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.ExpirationDate):</td>
                        <td>@Model.ExpirationDate.Value.ToString("d")</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.NoticeType))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.NoticeType):</td>
                        <td>@Model.NoticeType</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.TermsOfClearance))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.TermsOfClearance):</td>
                        <td>@Model.TermsOfClearance</td>
                    </tr>
                }
                @if (Model.NumberRespondents.Value > 0)
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.NumberRespondents):</td>
                        <td>@Model.NumberRespondents.Value.ToString()</td>
                    </tr>
                }
                @if (Model.NumberResponses.Value > 0)
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.NumberResponses):</td>
                        <td>@Model.NumberResponses.Value.ToString()</td>
                    </tr>
                }
                @if (Model.PercentCollectedElectronically.Value > 0.0)
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.PercentCollectedElectronically):</td>
                        <td>@Model.PercentCollectedElectronically.Value.ToString()</td>
                    </tr>
                }
                @if (Model.BurdenTotal.Value > 0)
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.BurdenTotal):</td>
                        <td>@Model.BurdenTotal.Value.ToString()</td>
                    </tr>
                }
                @if (Model.BurdenChange.Value > 0)
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.BurdenChange):</td>
                        <td>@Model.BurdenChange.Value.ToString()</td>
                    </tr>
                }
                @if (Model.BurdenAdjustment.Value > 0)
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.BurdenAdjustment):</td>
                        <td>@Model.BurdenAdjustment.Value.ToString()</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.BurdenExplanation))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.BurdenExplanation):</td>
                        <td>@Model.BurdenExplanation</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.PublicComment))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.PublicComment):</td>
                        <td>@Model.PublicComment</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.PublicCommentResponse))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.PublicCommentResponse)</td>
                        <td>@Model.PublicCommentResponse</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.OMBPassback))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.OMBPassback):</td>
                        <td>@Model.OMBPassback</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.AuthorizingLawCited))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.AuthorizingLawCited):</td>
                        <td>@Model.AuthorizingLawCited</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.AuthorizingLawText))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.AuthorizingLawText):</td>
                        <td>@Model.AuthorizingLawText</td>
                    </tr>
                }
                @if (!string.IsNullOrWhiteSpace(Model.ContractorConfidentialityFormLocation))
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.ContractorConfidentialityFormLocation):</td>
                        <td><br />@Model.ContractorConfidentialityFormLocation</td>
                    </tr>
                }

                @if (Model.Collections.Any())
                {
                    <tr>
                        <td class="bold">@Html.DisplayNameFor(_ => Model.Collections):</td>
                        <td>
                            <ul>
                                @foreach (var item in Model.Collections.OrderBy(a => a.Name))
                                {
                                    @if (item.Id > 0 && !string.IsNullOrWhiteSpace(item.Name))
                                    {
                                        <li>
                                            <a href="@Url.Action("Index", "Collection", new { Id = item.Id })">@item.Name</a>
                                        </li>
                                    }
                                }
                            </ul>
                        </td>
                    </tr>
                }
            </table>
        </div>
    </div>
    @if (Model.Collections.Any())
    {
    <!--tab collection-->
        <div id="tabCollection">
            <div id="divCollectionDetail">
                <table style="width: 100%; margin-bottom: 10px" id="tblPackageCollection" class="detailTables">
                    <tr>
                        <td style="font-weight: bold; font-size: medium; padding-bottom: 8px;" colspan="2">
                            @Html.DisplayNameFor(_ => Model.Collections)
                            <div style="float:right">
                                <input role="search" title="Search collection" style="width:130px;padding:0;font-size:small" type="text" name="txtCollectionSearchTerm" id="txtCollectionSearchTerm" />
                                <button role="button" class="btn" title="Search Collection" id="collectionSearchBtn">
                                    Search
                                </button>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" style="border-top: 1px solid #c5dbec;"></td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <ul>
                                @foreach (var item in Model.Collections.OrderBy(a => a.Name))
                                {
                                    <li>
                                        <a href="@Url.Action("Index", "Collection", new { Id = item.Id })">@item.Name</a>
                                    </li>
                                }
                            </ul>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    }
    @if (Model.Collections.Any(c => c.Study.Series != default(SeriesStubViewModel) && c.Study.Series.Id > 0 && !string.IsNullOrWhiteSpace(c.Study.Series.Name)))
    {
        <!--tab Series-->
        <div id="tabSeries">
            <div id="divSeriesDetail">
                <table style="width: 100%; margin-bottom: 10px" id="tblPackageSeries" class="detailTables">
                    <tr>
                        <td style="font-weight: bold; font-size: medium; padding-bottom: 8px;" colspan="2">
                            SERIES
                            <div style="float:right">
                                <input role="search" title="Search series" style="width:130px;padding:0;font-size:small" type="text" name="txtSeriesSearchTerm" id="txtSeriesSearchTerm" />
                                <button role="button" class="btn" title="Search Series" id="seriesSearchBtn">
                                    Search
                                </button>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" style="border-top: 1px solid #c5dbec;"></td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <ul>
                                @foreach (var c in Model.Collections.GroupBy(c => c.Study.Series.Id).Select(grp => grp.First()))
                                {
                                    @if (c.Study.Series != default(SeriesStubViewModel) && c.Study.Series.Id > 0 && !string.IsNullOrWhiteSpace(c.Study.Series.Name))
                                    {
                                        <li>
                                            <a href="@Url.Action("Index", "Series", new { Id = c.Study.Series.Id })">@c.Study.Series.Name</a>
                                        </li>
                                    }
                                }
                            </ul>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    }
    @if (Model.Collections.Any(c => c.Study != default(StudyStubViewModel) && c.Study.Id > 0 && !string.IsNullOrWhiteSpace(c.Study.Name)))
    {
        <!--tab Study-->
        <div id="tabStudy">
            <div id="divStudyDetail">
                <table style="width: 100%; margin-bottom: 10px" id="tblPackageStudy" class="detailTables">
                    <tr>
                        <td style="font-weight: bold; font-size: medium; padding-bottom: 8px;" colspan="2">
                            STUDY
                            <div style="float:right">
                                <input role="search" title="Search study" style="width:130px;padding:0;font-size:small" type="text" name="txtStudySearchTerm" id="txtStudySearchTerm" />
                                <button role="button" class="btn" title="Search Study" id="studySearchBtn">
                                    Search
                                </button>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2" style="border-top: 1px solid #c5dbec;"></td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <ul>
                                @foreach (var c in Model.Collections.GroupBy(c => c.Study.Id).Select(grp => grp.First()))
                                {
                                    @if (c.Study != default(StudyStubViewModel) && c.Study.Id > 0 && !string.IsNullOrWhiteSpace(c.Study.Name))
                                    {
                                        <li>
                                            <a href="@Url.Action("Index", "Study", new { Id = c.Study.Id })">>>@c.Study.Name</a>
                                        </li>
                                    }
                                }
                            </ul>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    }
</div>